<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Allan&#39;s blog</title>
    <link>http://allan-simon.github.io/blog/posts/</link>
    <description>Recent content in Posts on Allan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Mar 2018 23:36:00 +0200</lastBuildDate>
    
	<atom:link href="http://allan-simon.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Better null display psql</title>
      <link>http://allan-simon.github.io/blog/posts/better-null-display-psql/</link>
      <pubDate>Thu, 29 Mar 2018 23:36:00 +0200</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/better-null-display-psql/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been frustating recently to differenciate &lt;code&gt;NULL&lt;/code&gt; and empty strings
in postgresql when requeting manually with &lt;code&gt;psql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Turns out there&amp;rsquo;s an easy way to change that.&lt;/p&gt;

&lt;p&gt;Just use&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;\pset null &#39;Ø&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and now&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; id |          email          |  first  | last
----+-------------------------+---------+-------
  1 | your-email@example.com  | Foo     | Bar
  2 | first-is-null@foo.com   |         |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; id |          email          |  first  | last
----+-------------------------+---------+-------
  1 | your-email@example.com  | Foo     | Bar
  2 | first-is-null@foo.com   | Ø       |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>check start time before end time in postgresql</title>
      <link>http://allan-simon.github.io/blog/posts/check-start-time-before-end-time-in-postgresql/</link>
      <pubDate>Wed, 10 Aug 2016 05:48:30 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/check-start-time-before-end-time-in-postgresql/</guid>
      <description>Something that a lot of people coming from MySQL does not know about real SQL database is the possibility to have &amp;lsquo;advanced&amp;rsquo; constraints
A very simple one here, but quite common
I have my table Event with a start_time and end_time and of course I want to be sure that it can&amp;rsquo;t be possible to have a start_time that happens after its end_time. in MySQL outside of creating triggers you will most of the time have no other way than to do this check in your application code, and of course either it will not be put directly.</description>
    </item>
    
    <item>
      <title>get http status code in bash script wit curl</title>
      <link>http://allan-simon.github.io/blog/posts/get-http-status-code-in-bash-script-wit-curl/</link>
      <pubDate>Fri, 29 Jul 2016 15:44:25 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/get-http-status-code-in-bash-script-wit-curl/</guid>
      <description>A simple piece of bash to know if your service is up or not
response=$( curl YOUR_URL \ --write-out %{http_code} \ --silent \ --output /dev/null \ ) test &amp;quot;$response&amp;quot; -ge 200 &amp;amp;&amp;amp; test &amp;quot;$response&amp;quot; -le 299  You can replace the test by whatever suits you of course</description>
    </item>
    
    <item>
      <title>some reading for better understanding of postgresql</title>
      <link>http://allan-simon.github.io/blog/posts/some-reading-for-better-understanding-of-postgresql/</link>
      <pubDate>Sat, 16 Apr 2016 16:48:57 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/some-reading-for-better-understanding-of-postgresql/</guid>
      <description>&lt;p&gt;Today nothing big, just that I have a couple of links open
on my firefox, that I plan to read when I have sometimes
to learn more about postgresql, So here we are:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alembic use sql statement instead of sqlalchemy</title>
      <link>http://allan-simon.github.io/blog/posts/alembic-use-sql-statement-instead-of-sqlalchemy/</link>
      <pubDate>Sun, 03 Apr 2016 04:35:20 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/alembic-use-sql-statement-instead-of-sqlalchemy/</guid>
      <description>&lt;p&gt;I know it&amp;rsquo;s pretty popular to use the wonderful &lt;code&gt;sqlalchemy&lt;/code&gt; ORM
for python, especially combined with &lt;code&gt;alembic&lt;/code&gt;, but sometimes
you just want to type plain SQL request.&lt;/p&gt;

&lt;p&gt;And actually it&amp;rsquo;s pretty easy, after creating your migrations
just do:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python alembic with environment variables</title>
      <link>http://allan-simon.github.io/blog/posts/python-alembic-with-environment-variables/</link>
      <pubDate>Sun, 03 Apr 2016 03:09:40 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/python-alembic-with-environment-variables/</guid>
      <description>&lt;p&gt;At my job we&amp;rsquo;re currently using &lt;a href=&#34;http://alembic.readthedocs.org/&#34;&gt;alembic&lt;/a&gt;
to manage our database migrations (i.e adding a new table / index etc.)&lt;/p&gt;

&lt;p&gt;The tool is pretty mature and has been here for a while, so it covers
a lot of advanced case (like handling several databases, having a tree
of migrations etc.) while still being simple for simple case&lt;/p&gt;

&lt;p&gt;The only not straighforward thing I found was that it&amp;rsquo;s not easy
to integrate with 12Factor-apps, i.e my code is running in a lot
of differents environments (vagrant+docker on my local machine,
the QA environments,  the pre-production, production etc.)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>how to sum all numbers in file in bash</title>
      <link>http://allan-simon.github.io/blog/posts/how-to-sum-all-numbers-in-file-in-bash/</link>
      <pubDate>Sun, 20 Mar 2016 03:42:37 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/how-to-sum-all-numbers-in-file-in-bash/</guid>
      <description>&lt;h3 id=&#34;i-have-a-file-with-one-number-by-line-how-to-get-the-sum&#34;&gt;I have a file, with one number by line, how to get the sum&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paste -s -d+  myfile_with_numbers | bc 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and if you have a csv, delimited by &lt;code&gt;,&lt;/code&gt; and for which the number is on
the 2nd field:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cut -d,  my_file.csv -f 2 | paste -s -d+  | bc 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>murmur hash v3 in MySQL utf8 compatible</title>
      <link>http://allan-simon.github.io/blog/posts/murmur_hash_v3_in_mysql_utf8_compatible/</link>
      <pubDate>Sun, 20 Mar 2016 02:51:21 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/murmur_hash_v3_in_mysql_utf8_compatible/</guid>
      <description>&lt;h1 id=&#34;murmur-hash-v3-in-mysql-utf8-compatible&#34;&gt;Murmur hash v3 in MySQL utf8 compatible&lt;/h1&gt;

&lt;p&gt;These days for performance purpose, I needed to replace some &lt;code&gt;autoincrement&lt;/code&gt; Id
by a hash calculated one, in order to have a determinist way to retrieve from
an object, it&amp;rsquo;s record in database, and easily recognize duplicate.&lt;/p&gt;

&lt;p&gt;For that I have chosen the &lt;a href=&#34;https://en.wikipedia.org/wiki/MurmurHash&#34;&gt;murmur hash v3 function&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For new records, I could use the python module (leveraging C code) &lt;a href=&#34;https://pypi.python.org/pypi/mmh3/2.3.1&#34;&gt;mmh3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But as I needed to update million of existing record, I couldn&amp;rsquo;t possibly
imagine doing that by calling a python script.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bug in Vagrant with Virtualbox sharefolder</title>
      <link>http://allan-simon.github.io/blog/posts/bug-in-vagrant-virtualbox-sharefolder/</link>
      <pubDate>Sun, 23 Aug 2015 03:43:56 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/bug-in-vagrant-virtualbox-sharefolder/</guid>
      <description>&lt;h2 id=&#34;the-problem-serving-static-files&#34;&gt;The problem: serving static files&lt;/h2&gt;

&lt;p&gt;The problem will affect you if you try to serve static files
from your vagrant folder if you use the default from virtualbox&lt;/p&gt;

&lt;p&gt;For example you got your nginx or apache to serve css files
and when you update them, they don&amp;rsquo;t get updated, and sometimes
they even come out with some garbage bytes at the end of it&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>create a rest api with symfony2 Part 2: Entity,  DB Migration, CRUD</title>
      <link>http://allan-simon.github.io/blog/posts/create-a-rest-api-with-symfony2-part2-entity-migration/</link>
      <pubDate>Sun, 24 May 2015 18:26:09 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/create-a-rest-api-with-symfony2-part2-entity-migration/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update 23 November 2015&lt;/strong&gt;: Corrected some typo, and updated bundles versions for Doctrine&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&#34;http://allan-simon.github.io/blog/posts/create-a-rest-api-with-symfony2/&#34;&gt;first part&lt;/a&gt; we&amp;rsquo;ve seen how to
create the base of a symfony2 project used to generate a REST Api.&lt;/p&gt;

&lt;p&gt;In this part we&amp;rsquo;re going to see&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use the basics of JMSSerializer to serialize Entity objects&lt;/li&gt;
&lt;li&gt;How to link our API with a database&lt;/li&gt;
&lt;li&gt;How to create migration files to easily manage our datase over time and colleagues&lt;/li&gt;
&lt;li&gt;and how to generate a full &lt;a href=&#34;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&#34;&gt;CRUD (create/read/update/delete)&lt;/a&gt; with form checking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create a production ready rest api with symfony2 (part 1)</title>
      <link>http://allan-simon.github.io/blog/posts/create-a-rest-api-with-symfony2/</link>
      <pubDate>Sat, 23 May 2015 23:31:15 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/create-a-rest-api-with-symfony2/</guid>
      <description>&lt;p&gt;What will we cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how to transform a just-started symfony project into a REST-ready project&lt;/li&gt;
&lt;li&gt;how to configure and use the FOSRestBundle to help us in that task&lt;/li&gt;
&lt;li&gt;How to use Doctrine migrations to easily transition your database from version N to version N+1&lt;/li&gt;
&lt;li&gt;how to add functionnal tests to automatically check your API&lt;/li&gt;
&lt;li&gt;how to configure and use the JMSSerializer to automagically serialize and unseralize your data into json (or xml)&lt;/li&gt;
&lt;li&gt;How to plug your API to a Oauth2 service&lt;/li&gt;
&lt;li&gt;mixed in between some generic advices to make your API reality proof&lt;/li&gt;
&lt;li&gt;practical examples of common &amp;ldquo;tricky things&amp;rdquo; (Image uploading / pagination / association between resources etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we suppose you&amp;rsquo;re already familiar with what a REST API &lt;strong&gt;exactly&lt;/strong&gt; means,
and I really mean the emphasis in &lt;strong&gt;exactly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;for this I urge you to read these links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://martinfowler.com/articles/richardsonMaturityModel.html&#34;&gt;http://martinfowler.com/articles/richardsonMaturityModel.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://blog.steveklabnik.com/posts/2011-07-03-nobody-understands-rest-or-http&#34;&gt;http://blog.steveklabnik.com/posts/2011-07-03-nobody-understands-rest-or-http&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/interagent/http-api-design&#34;&gt;https://github.com/interagent/http-api-design&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&#34;&gt;www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An API is made to resist the test of time, so you can really afford to spend one or
two hours to carefully read these links.&lt;/p&gt;

&lt;h3 id=&#34;example-project&#34;&gt;Example project&lt;/h3&gt;

&lt;p&gt;All the steps described here are applied in this toy project
&lt;a href=&#34;https://github.com/allan-simon/symfony2-rest-api-example&#34;&gt;https://github.com/allan-simon/symfony2-rest-api-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a Blog-like services with a REST API in json at the end it will permit&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multiple Authors&lt;/li&gt;
&lt;li&gt;Possiblity to add/edit/delete articles&lt;/li&gt;
&lt;li&gt;Possibility to comments&lt;/li&gt;
&lt;li&gt;Creation of tags to category articles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Things I&#39;ve learn this week</title>
      <link>http://allan-simon.github.io/blog/posts/things-i-ve-learn-this-week/</link>
      <pubDate>Tue, 12 May 2015 22:40:38 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/things-i-ve-learn-this-week/</guid>
      <description>&lt;p&gt;More than often I find myself trying to remember how did i solve that very one problem I thought I would have to solve only once, so I decided to start writing their solution here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* How to reload PHP-fpm without restarting it
* How to send the unchanged Host header to proxied server with Nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vagrant with ansible provisionning docker containers for symfony2</title>
      <link>http://allan-simon.github.io/blog/posts/vagrant-with-ansible-provisionning-docker-containers-for-symfony2/</link>
      <pubDate>Sun, 12 Apr 2015 04:14:20 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/vagrant-with-ansible-provisionning-docker-containers-for-symfony2/</guid>
      <description>&lt;p&gt;In this article we&amp;rsquo;re going to cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use ansible+docker+vagrant to create a one size for all environment for Symfony2 + Nginx + Postgresql + PHP-fpm&lt;/li&gt;
&lt;li&gt;How to transition an existing application to fit in that new environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article take the assumption that you have already heard about all the technologies above without being too familiar with them.&lt;/p&gt;

&lt;p&gt;As an example will take the existing Oauth2 server I have created: &lt;a href=&#34;https://github.com/allan-simon/oauth2-symfony2-vagrant-fosuserbundle&#34;&gt;Oauth2Symfony2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>doctrine2 order by count many to many</title>
      <link>http://allan-simon.github.io/blog/posts/doctrine2-order-by-count-many-to-many/</link>
      <pubDate>Thu, 09 Apr 2015 01:44:41 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/doctrine2-order-by-count-many-to-many/</guid>
      <description>&lt;p&gt;Today I found a problem quite common but tricky enough for the solution
to share it with you&lt;/p&gt;

&lt;h3 id=&#34;the-problem&#34;&gt;The problem&lt;/h3&gt;

&lt;p&gt;I have 2 Entities&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User&lt;/li&gt;
&lt;li&gt;Article&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and a &amp;ldquo;likedByUsers&amp;rdquo; Many To Many relationship between both&lt;/p&gt;

&lt;p&gt;Now I would like to get the Articles ordered by number of &amp;lsquo;likes&amp;rsquo;
for an API call returning a list of Articles&lt;/p&gt;

&lt;p&gt;if you feel smart you can try to find the solution by yourself
it&amp;rsquo;s an interesting exercise about &amp;lsquo;how much do you know doctrine and SQL&amp;rsquo;&lt;/p&gt;

&lt;p&gt;but let me tell you, the solution is like an Egg of Columbus, once you see
it it becomes evident, but it was actually not that simple at first.&lt;/p&gt;

&lt;h3 id=&#34;the-solution&#34;&gt;The solution&lt;/h3&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitlab ci with docker runner</title>
      <link>http://allan-simon.github.io/blog/posts/gitlab-ci-with-docker-runner/</link>
      <pubDate>Sun, 29 Mar 2015 15:05:36 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/gitlab-ci-with-docker-runner/</guid>
      <description>&lt;p&gt;In my company we&amp;rsquo;re using &lt;a href=&#34;https://gitlab.com&#34;&gt;Gitlab&lt;/a&gt; for managing our code
and doing code review. For the last months we&amp;rsquo;ve been standardizing our stack
on Symfony/Postgresql/php-fpm. Recently we&amp;rsquo;ve started automatizing our tests
using phpunit. The next step was of course to have a start of continuous
integration and to be able to run our tests at each Merge request.&lt;/p&gt;

&lt;p&gt;In this article we&amp;rsquo;re going to view&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to install gitlab-ci on a separate server than your gitlab instance&lt;/li&gt;
&lt;li&gt;How to put gitlab-ci behind your company frontal server&lt;/li&gt;
&lt;li&gt;How to make gitlab-ci run your tests in a Docker container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>symfony create your own third party bundle part 1/4</title>
      <link>http://allan-simon.github.io/blog/posts/symfony-create-your-own-third-party-bundle/</link>
      <pubDate>Sat, 28 Mar 2015 21:05:04 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/symfony-create-your-own-third-party-bundle/</guid>
      <description>&lt;p&gt;So you&amp;rsquo;ve reached the point where you&amp;rsquo;re reusing the same service accross
symfony application, again and again and you feel like this could even
be useful for other people. You decide that it will be great if you could
do like adults and have your own bundle.&lt;/p&gt;

&lt;p&gt;Here is how to create one from scratch, you can find the repo here &lt;a href=&#34;https://travis-ci.org/we-bridge/OAuth2AccessBundle&#34;&gt;Oauth2AccessBundle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;we cover these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating the base repo in github and composer.json&lt;/li&gt;
&lt;li&gt;Adding the base Classes&lt;/li&gt;
&lt;li&gt;Permit users of your bundle to configure it&lt;/li&gt;
&lt;li&gt;Make your bundle testable&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>migrate down with doctrine migrations</title>
      <link>http://allan-simon.github.io/blog/posts/migrate-down-with-doctrine-migrations/</link>
      <pubDate>Sat, 14 Mar 2015 18:21:01 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/migrate-down-with-doctrine-migrations/</guid>
      <description>&lt;p&gt;if you&amp;rsquo;re using Doctrine in your Symfony2 project, you&amp;rsquo;re certainly using the
excellent &lt;a href=&#34;http://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html&#34;&gt;Doctrine Migration Bundle&lt;/a&gt;
but you may have seen that documentation is not staging clearly how to migrate down&lt;/p&gt;

&lt;p&gt;for that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php app/console doctrine:migrations:status

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;take the number in &amp;ldquo;Current Version&amp;rdquo; (format YYYYMMDDHHMMSS)&lt;/p&gt;

&lt;p&gt;and then run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php app/console doctrine:migrations:execute YYYYMMDDHHMMSS --down
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;that&amp;rsquo;s all folks !&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>symfony 2.6 tips #1</title>
      <link>http://allan-simon.github.io/blog/posts/symfony-2.6-tips-1/</link>
      <pubDate>Wed, 11 Mar 2015 22:40:50 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/symfony-2.6-tips-1/</guid>
      <description>&lt;p&gt;Here a list of tips for symfony 2.6 I&amp;rsquo;ve gathered these days&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how to skip test in phpunit&lt;/li&gt;
&lt;li&gt;how to disable form validation in test&lt;/li&gt;
&lt;li&gt;(Doctrine) don&amp;rsquo;t use findById() when you just mean find()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redmine-cli and redmine API</title>
      <link>http://allan-simon.github.io/blog/posts/redmine-cli/</link>
      <pubDate>Wed, 25 Feb 2015 00:08:11 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/redmine-cli/</guid>
      <description>&lt;p&gt;I found a tool to manage redmine from the cli, in python:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pip install redmine-cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;then a config file &lt;code&gt;~/.redmine-cli&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[default]
key=API_KEY_YOU_CAN_SEE_IN_YOUR_ACCOUNT_ON_REDMINE
my_id=ID_YOU_CAN_ON_YOUR_PROFILE_PAGE
root_url=HOME_PAGE_OF_REDMINE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then you can do&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;redmine open 123&lt;/code&gt; to open the issue 123 in your browser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redmine issues&lt;/code&gt; to see your issues&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redmine issue 123&lt;/code&gt; to see information about issue 123&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(it has more options I let you check the doc)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yanjost/redmine-cli&#34;&gt;original repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/allan-simon/redmine-cli&#34;&gt;my fork where I have some features (like updating a ticket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(hopefully my modification are in PR on the original repo and will be soon integrated)
my modification include so far:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redmine issue 123 long&lt;/code&gt; to see more detailled information about the issue&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redmine update 123 &#39;in progress&#39;&lt;/code&gt; to update the status to &lt;code&gt;in progress&lt;/code&gt; (admitting your redmine has this status)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Form name goes into global scope in javascript</title>
      <link>http://allan-simon.github.io/blog/posts/form-name-goes-into-global-scope-javascript/</link>
      <pubDate>Mon, 23 Feb 2015 17:11:21 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/form-name-goes-into-global-scope-javascript/</guid>
      <description>&lt;p&gt;An interesting problem a friend of mine discovered today&lt;/p&gt;

&lt;p&gt;Can you spot the problem?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Workflow publishing blog post with hugo</title>
      <link>http://allan-simon.github.io/blog/posts/workflow-publishing-blog-post-with-hugo/</link>
      <pubDate>Fri, 20 Feb 2015 15:03:36 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/workflow-publishing-blog-post-with-hugo/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve added some functions in my shell to make it even more convenient
to write/edit/publish articles with &lt;code&gt;hugo&lt;/code&gt; (just a self reminder)&lt;/p&gt;

&lt;p&gt;so that now I have&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new_blog_post name-of-your-blog-post&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;publish_blog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edit_last_blog_post&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;that can be run from anywhere in my terminal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export BLOG_ROOT=~/git/perso/blog
export BLOG_THEME=hyde
export GITHUB=git@github.com:allan-simon/blog.git

function new_blog_post {
    cd $BLOG_ROOT
    LAST_BLOG_POST=$(hugo new posts/$1.md | cut -d &amp;quot; &amp;quot; -f 1) ;
    export LAST_BLOG_POST ;
    $EDITOR $LAST_BLOG_POST
    cd -
}

function publish_blog {
    cd $BLOG_ROOT;
    hugo --theme=&amp;quot;$BLOG_THEME&amp;quot; --buildDrafts &amp;amp;&amp;amp; \
    git add -A &amp;amp;&amp;amp;  \
    git commit -m &amp;quot;Updating site&amp;quot; &amp;amp;&amp;amp; \
    git push origin master &amp;amp;&amp;amp; \
    git subtree push --prefix=public $GITHUB gh-pages --squash  &amp;amp;&amp;amp; \
    echo &amp;quot;published&amp;quot;
    cd $BLOG_ROOT
}

function edit_last_blog_post {
    $EDITOR $LAST_BLOG_POST
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Functionnal tests in symfony2 with authentication</title>
      <link>http://allan-simon.github.io/blog/posts/functionnal-tests-symfony2-and-authentication/</link>
      <pubDate>Fri, 20 Feb 2015 14:28:13 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/functionnal-tests-symfony2-and-authentication/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s say you have your symfony2 website, all setup correctly with its
set of functionnal tests using phpunit, and now you start to have
pages that only authenticated users can access to. My first solution was to
create a client, make it load the login form, submit some valid credentials
and then load the actual page to test. It was working fine as the client
has a storage for cookie, it is acting like an actual browser in that case.&lt;/p&gt;

&lt;p&gt;The problem was that the time to execute the test was much longer, which
started to become a problem has the test suite was growing.&lt;/p&gt;

&lt;p&gt;The first trick is to follow them method adviced by symfony, which is for the
test environnement to enable the HTTP Basic Authentication method. For those
who doesn&amp;rsquo;t know, the HTTP standard comme with a method to authentify a
user-agent by directly sending the username/password in the HTTP header
(which goes along the fact that HTTP is aimed to be stateless)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Solve composer github api limitation</title>
      <link>http://allan-simon.github.io/blog/posts/solve-composer-github-api-limitation/</link>
      <pubDate>Tue, 10 Feb 2015 18:19:22 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/solve-composer-github-api-limitation/</guid>
      <description>&lt;h3 id=&#34;could-not-fetch-x-enter-your-github-credentials-to-go-over-the-api-rate-limit&#34;&gt;Could not fetch X enter your GitHub credentials to go over the API rate limit&lt;/h3&gt;

&lt;p&gt;The problem is that composer is retrieving nearly all the packages from github
using the anonymous access github API. In order to solve it you need to generate
a token&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;you need a github account (or ask a friend)&lt;/li&gt;
&lt;li&gt;go on your setting page &lt;a href=&#34;https://github.com/settings/applications&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;click on &lt;code&gt;Generate new token&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;now two possibilities&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install docker on ubuntu 12.04</title>
      <link>http://allan-simon.github.io/blog/posts/install-docker-on-ubuntu-12.04/</link>
      <pubDate>Tue, 10 Feb 2015 14:14:49 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/install-docker-on-ubuntu-12.04/</guid>
      <description>&lt;p&gt;This article is a shameless summary from &lt;a href=&#34;http://compositecode.com/2013/11/11/getting-docker-installed-on-ubuntu-12-04-lts/&#34;&gt;http://compositecode.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the steps are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating your kernel to 3.8+ (requires a reboot)&lt;/li&gt;
&lt;li&gt;Add the docker repository&lt;/li&gt;
&lt;li&gt;Installing the package&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install linux-image-generic-lts-raring linux-headers-generic-lts-raring
sudo reboot
sudo sh -c &amp;quot;wget -qO- https://get.docker.io/gpg | apt-key add -&amp;quot;
sudo sh -c &amp;quot;echo deb http://get.docker.io/ubuntu docker main &amp;gt; /etc/apt/sources.list.d/docker.list&amp;quot;
sudo apt-get update
sudo apt-get install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now you should be able to get docker working&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>postgresql display one column per line</title>
      <link>http://allan-simon.github.io/blog/posts/postgresql-display-one-column-per-line/</link>
      <pubDate>Tue, 10 Feb 2015 11:48:21 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/postgresql-display-one-column-per-line/</guid>
      <description>&lt;h3 id=&#34;problem-displaying-a-table-with-a-lot-of-columns&#34;&gt;Problem : displaying a table with a lot of columns&lt;/h3&gt;

&lt;p&gt;You always got that table with a dozens of columns of type text and for which
the normal tabular output does not work nicely and you end up with something
like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; articleid | plop | pouet | prout | tagada |  id   | newsid  | newstype |                                                          title                                                          | something | something | something | something | something | something | something | something |      something       |      something       | something | something | something | something |          something          |    something    |                                                                                                                                                                                                                                                                                                                 something                                                                                                                                                                                                                                                                                                                 |            something            

   1000163 |     0 |     0 |     0 |     0 |   141 | 1000147 |       10 | blablabla                                                                                           |          3 |           4 |        22 |    1000163 |               0 | 1000163 |          184 |   10028 | 2014-06-30 23:36:00 | 2014-06-30 23:36:00 |             0 |           0 |         0 |          0 |                           |           |          
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A new Blog this time on github and statically generated</title>
      <link>http://allan-simon.github.io/blog/posts/first/</link>
      <pubDate>Mon, 09 Feb 2015 23:24:39 +0800</pubDate>
      
      <guid>http://allan-simon.github.io/blog/posts/first/</guid>
      <description>It has been a long time since I last did a blog the biggest reason behind were:
 it&amp;rsquo;s hard to maintain a server and a blog platform most common web plateforms are blocked in China the other plateforms does not fit my geeky needs non-self hosted platform make it hard to have easy backup of your data  So here we are, after reading comments on HackerNews I&amp;rsquo;ve found the project Hugo which permits you to create a static blog the advantages I see to it</description>
    </item>
    
  </channel>
</rss>